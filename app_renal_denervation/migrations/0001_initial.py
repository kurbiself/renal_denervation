# Generated by Django 4.2 on 2025-02-05 14:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название активного вещества')),
            ],
            options={
                'verbose_name': 'Активное вещество',
                'verbose_name_plural': 'Активные вещества',
            },
        ),
        migrations.CreateModel(
            name='CatheterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256, verbose_name='Название катетера')),
                ('shortname', models.CharField(max_length=256, null=True, verbose_name='Сокращённое название катетера')),
            ],
            options={
                'verbose_name': 'Катетер',
                'verbose_name_plural': 'Катетеры',
            },
        ),
        migrations.CreateModel(
            name='CheckPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_point', models.CharField(choices=[('Через 6 месяцев', 'Через 6 месяцев'), ('Через 1 год', 'Через 1 год'), ('Через 2 года', 'Через 2 года'), ('Через 5 лет', 'Через 5 лет')], verbose_name='Название типа контрольной точки')),
                ('date_of_receipt', models.DateField(null=True)),
                ('date_of_discharge', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256, verbose_name='Название заболевания')),
                ('shortname', models.CharField(max_length=256, null=True, verbose_name='Краткое название заболевания')),
                ('code_ICD_10', models.CharField(max_length=16, null=True, verbose_name='Код МКБ 10')),
            ],
            options={
                'verbose_name': 'Заболевание',
                'verbose_name_plural': 'Заболевания',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256, unique=True, verbose_name='Полное название лечебно-профилактического учреждения')),
                ('shortname', models.CharField(max_length=256, null=True, verbose_name='Аббревиатура лечебно-профилактического учреждения')),
                ('city', models.CharField(max_length=128, null=True, verbose_name='Город местонахождения ЛПУ')),
                ('contact_number', models.CharField(db_comment='', max_length=12, null=True, verbose_name='Контактные данные')),
            ],
            options={
                'verbose_name': 'Лечебно-профилактическое учреждение',
                'verbose_name_plural': 'Лечебно-профилактические учреждения',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_name', models.CharField(max_length=256, unique=True, verbose_name='Торговое наименование')),
                ('international_name', models.CharField(max_length=256, verbose_name='Международное непантентованное название')),
                ('active_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.activeingredient', verbose_name='Активное вещество')),
            ],
            options={
                'verbose_name': 'Лекарство',
                'verbose_name_plural': 'Лекарства',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_type', models.CharField(choices=[('numerical', 'numerical'), ('qualitative', 'qualitative'), ('binary', 'binary'), ('descriptive', 'descriptive')], verbose_name='Тип измерямеого признака')),
                ('fullname', models.CharField(max_length=256, verbose_name='Название показателя')),
                ('shortname', models.CharField(max_length=256, null=True, verbose_name='Краткое название показателя')),
                ('reference_max_numerical', models.IntegerField(verbose_name='Референсное значение по верхней границе количественного признака')),
                ('reference_min_numerical', models.IntegerField(verbose_name='Референсное значение по нижней границе количественного признака')),
                ('reference_binary', models.BooleanField(verbose_name='Референсное значение для бинарного признака')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=128, unique=True, verbose_name='Идентификатор пациента')),
                ('gender', models.CharField(choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], verbose_name='Пол пациента')),
                ('birth', models.DateField(null=True, verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
        migrations.CreateModel(
            name='PharmacologicalGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название фармакологической группы')),
            ],
            options={
                'verbose_name': 'Фармакологическая группа',
                'verbose_name_plural': 'Фармакологические группы',
            },
        ),
        migrations.CreateModel(
            name='ResearchTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type_research', models.CharField(choices=[('laboratory', 'laboratory'), ('instrumental', 'instrumental')], null=True)),
            ],
            options={
                'verbose_name': 'Шаблон исследования',
                'verbose_name_plural': 'Шаблоны исследований',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=256, unique=True, verbose_name='Название единиц измерения')),
                ('shortname', models.CharField(max_length=256, null=True, verbose_name='Обозначение единиц изменения')),
            ],
            options={
                'verbose_name': 'Единица измерений',
                'verbose_name_plural': 'Единицы измерений',
            },
        ),
        migrations.CreateModel(
            name='VariantQualitative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=256, verbose_name='Вариант признака')),
                ('reference', models.BooleanField()),
                ('metric_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.metric')),
            ],
            options={
                'verbose_name': 'Вариант качественного признака',
                'verbose_name_plural': 'Варианты качественного признака',
            },
        ),
        migrations.CreateModel(
            name='TreatmentDrug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('dose', models.FloatField(null=True)),
                ('taking_medicine_morning', models.BooleanField()),
                ('taking_medicine_day', models.BooleanField()),
                ('taking_medicine_evening', models.BooleanField()),
                ('taking_medicine_night', models.BooleanField()),
                ('check_point_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.checkpoint')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='SurgicalOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название операции')),
                ('date', models.DateField(verbose_name='Дата операции')),
                ('catheter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_renal_denervation.cathetertype')),
            ],
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата проводимого исследования')),
                ('check_point_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.checkpoint', verbose_name='Контрольная точка исследования')),
                ('research_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.researchtemplate', verbose_name='Шаблон исследования')),
            ],
            options={
                'verbose_name': 'Исследование',
                'verbose_name_plural': 'Исследования',
            },
        ),
        migrations.CreateModel(
            name='MetricValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_numerical', models.IntegerField(verbose_name='Значение количественного признака')),
                ('value_binary', models.BooleanField(verbose_name='Значение бинарного признака')),
                ('value_descriptive', models.CharField(max_length=1024, verbose_name='Значение описательного признака')),
                ('metric_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.metric')),
                ('research_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.research')),
                ('value_qualitative_id', models.ManyToManyField(to='app_renal_denervation.variantqualitative', verbose_name='Значение качественногоо признака')),
            ],
            options={
                'verbose_name': 'Значение показателя',
                'verbose_name_plural': 'Значения показателей',
            },
        ),
        migrations.CreateModel(
            name='MetricsTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.metric')),
                ('research_template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.researchtemplate')),
            ],
            options={
                'verbose_name': 'Шаблон показателя',
                'verbose_name_plural': 'Шаблоны показателей',
            },
        ),
        migrations.AddField(
            model_name='medicine',
            name='pharmacological_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.pharmacologicalgroup', verbose_name='Фармакологическая группа'),
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_history', models.CharField(max_length=128, verbose_name='Номер истории болезни')),
                ('year_start_disease', models.IntegerField(verbose_name='Год начала заболевания')),
                ('note', models.CharField(max_length=512, verbose_name='Примечения')),
                ('concomitant_disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='concomitant_diseases', to='app_renal_denervation.disease', verbose_name='Сопутсвующее заболевание заболевание')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.patient')),
                ('underlying_disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='underlying_diseases', to='app_renal_denervation.disease', verbose_name='Основное заболевание')),
                ('сhronic_disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chronic_diseases', to='app_renal_denervation.disease', verbose_name='Хроническое заболевание')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.medicalhistory')),
                ('treatment_drugs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_renal_denervation.treatmentdrug')),
                ('treatment_surgical_operaton', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_renal_denervation.surgicaloperation')),
            ],
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='hospital_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_renal_denervation.hospital'),
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_renal_denervation.patient'),
        ),
    ]
